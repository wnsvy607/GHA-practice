# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring CI / CD with Gradle

on:
#    푸쉬할 때마다 액션이 트리거 된다.
  push:
    branches: [ "main" ]

#  pull_request:
#    branches: [ "main" ]
#  수동으로 워크플로우 트리거 가능
  workflow_dispatch:

jobs:
  build:
    name: CI with Gradle
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
  
    - name: Build with Gradle
      run: ./gradlew clean build -x test
      shell: bash

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          build/libs/*.jar

  deploy:
    name: CD with SSH
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      # JAR 파일을 EC2에 배포하는 step
      - name: SCP JAR to EC2
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.EC2_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          source: "*.jar"
          target: "/home/ubuntu/app"

      # EC2에 SSH로 배포 커맨드를 입력하는 step
      - name: Deploy SSH
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.EC2_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          # 기존 실행 중인 서버 종료 후 jar 파일 실행
          script: |
            sudo fuser -k -n tcp 8080
            sleep 15
            sudo nohup java -jar /home/ubuntu/app/*.jar > ./nohup.out 2>&1 &
